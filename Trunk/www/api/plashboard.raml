#%RAML 0.8
title: Plashboard
version: v1
baseUri: http://localhost/
#baseUri: http://localhost/api/{version}
mediaType: application/json

schemas:
  - measures: schema/plashboard-measures.json
    userCommands: schema/plashboard-userCommands.json
    message: schema/plashboard-message.json
    authentication: schema/plashboard-authentication.json
    authorized: schema/plashboard-authorized.json

traits:
  - secured:
        usage: Apply this to any method that needs to be secured
        description: Some requests require authentication
        headers:
            Authorization:
                description: |
                    The JWT token provided by the /authorize method.
                type: string
                required: true
        responses:
            404:
                body:
                    application/json:
                        schema: message
                        example: |
                            {
                                "code": 404,
                                "message": "Not found"
                            }
            401:
                body:
                    application/json:
                        schema: message
                        example: |
                            {
                                "code": 401,
                                "message": "Authorized require"
                            }
    timeSearchable:
        usage: Apply this to any method that can be filter by timestamp
        description: Some requests can search data with time filter
        queryParameters:
            time:
                description: Date time to start the search
                example: "2015-03-04 15:00:00"
                required: false
                type: string

    limitedSearchable:
        usage: Apply this to any method that can be respond a number max of result
        description: Some requests can search data with max result to given back
        queryParameters:
            xlast:
                description: Number of result max to given back
                example: 5
                required: false
                type: integer

/authorize:
    post:
        description: |
            Get an authentication token. TODO
        queryParameters:
            user:
                description: Name for the user account
                example: "Stark"
                required: true
                type: string
            password:
                description: Password for the user account
                example: "MissPepper01091963"
                required: true
                type: string
        body:
            application/json:
                schema: authentication
                example: |
                    {
                        "username": "plashboard",
                        "password": "1234"
                    }
        responses:
            200:
                body:
                    application/json:
                        schema: authorized
                        example: |
                            {
                                "token": "ASDFGHJKL"
                            }
            401:
                body:
                    application/json:
                        schema: message
                        example: |
                            {
                                "code": -1,
                                "message": "Username and password invalid"
                            }

/measures:
    get:
        is: [ secured, timeSearchable, limitedSearchable ]
        description: Get all measures for sensors.
        responses:
            200:
                body:
                    application/json:
                        schema: measures
                        example: |
                            [
                                {
                                    "id": 1,
                                    "hardwareConfigurationId": 5,
                                    "hardwareName": "temperature_sensor",
                                    "value": 21,
                                    "timestamp": "2015-03-03 14:22:00"
                                },
                                {
                                    "id": 2,
                                    "hardwareConfigurationId": 6,
                                    "hardwareName": "ph_sensor",
                                    "value": 7,
                                    "timestamp": "2015-03-03 14:35:03"
                                },
                                {
                                    "id": 3,
                                    "hardwareConfigurationId": 9,
                                    "hardwareName": "pressure_sensor",
                                    "value": 4,
                                    "timestamp": "2015-03-03 14:40:52"
                                }	
                            ]
    /{sensorId}:
        description: Get measure for a specific sensor.
        get:
            is: [ secured, timeSearchable, limitedSearchable ]
            description: Get the measure with `hardwareConfigurationId = {sensorId}`.
            responses:
                200:
                    body:
                        application/json:
                            schema: measures
                            example: |
                                {
                                    "id": 1,
                                    "hardwareConfigurationId": 5,
                                    "hardwareName": "temperature_sensor",
                                    "value": 21,
                                    "timestamp": "2015-03-03 14:22:00"
                                }

/usercommands:
    get:
        is: [ secured, timeSearchable, limitedSearchable ]
        description: Get all user commands.
        responses:
            200:
                body:
                    application/json:
                        schema: userCommands
                        example: |
                            [
                                {
                                    "id": 1,
                                    "command": "Create",
                                    "targetName": "userConfiguration",
                                    "value": "ph_target:2:su:6",
                                    "timestamp": "2015-03-03 14:22:00",
                                    "done":1
                                },
                                {
                                    "id": 2,
                                    "command": "Set",
                                    "targetName": "light",
                                    "value": "1",
                                    "timestamp": "2015-03-03 15:00:00",
                                    "done":1
                                },
                                {
                                    "id": 3,
                                    "command": "Set",
                                    "targetName": "light",
                                    "value": "0",
                                    "timestamp": "2015-03-03 16:45:00",
                                    "done":0
                                }	
                            ]
    post:
        is: [ secured ]
        description: Add a user command executate later by the python process
        queryParameters:
            command:
                description: Command name in enum "Create, Delete, Update, Set"
                example: "Create"
                required: true
                type: string
            targetName:
                description: Target to apply value
                example: "light"
                required: true
                type: string
            value:
                description: Value to apply
                example: "on"
                required: true
                type: string
        responses:
            201:
                body:
                    application/json:
                        schema: message
                        example: |
                            {
                                "code": 201,
                                "message": "Data created"
                            }
            400:
                body:
                    application/json:
                        schema: message
                        example: |
                            {
                                "code": 400,
                                "message": "Bad parameters"
                            }                            

    /{commandId}:
        description: Get information for a specific command.
        get:
            is: [ secured, timeSearchable, limitedSearchable ]
            description: Get the command with `id = {commandId}`.
            responses:
                200:
                    body:
                        application/json:
                            schema: measures
                            example: |
                                {
                                    ""id": 3,
                                    "command": "Set",
                                    "targetName": "light",
                                    "value": "0",
                                    "timestamp": "2015-03-03 16:45:00",
                                    "done":0
                                }